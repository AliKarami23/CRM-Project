openapi: 3.0.3
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: |-
    This is a dfv Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

    _If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_

    Some useful links:
    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
    - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: alikarami.serv00.net/
tags:
  - name: User
  - name: Role
  - name: Order
  - name: Factor
  - name: Opportunities
  - name: Product

paths:
  '/user/SignUp({user_type})':
    post:
      tags:
        - User
      summary: Sign Up {user_type}
      description: Sign up and create a new {user_type} user account in the system.
      operationId: SignUp{user_type}
      parameters:
        - name: user_type
          in: path
          required: true
          schema:
            type: string
          description: User type (e.g., Admin, Customer)
      requestBody:
        description: Provide user details to sign up and create a new {user_type} user account.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/{user_type}Input'
      responses:
        '200':
          description: Successful sign up
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/{user_type}Output'
        '400':
          description: Invalid ID supplied
        '404':
          description: Not found
        '405':
          description: Validation exception
components:
  schemas:
    AdminInput:
      type: object
      properties:
        Role:
          type: string
          example: "Admin"
        Email:
          type: string
          example: "admin@example.com"
        PhoneNumber:
          type: string
          example: "9121234567"
        CompanyName:
          type: string
          example: "My Company"
        CompanyAddress:
          type: string
          example: "123 Main Street, City, Country"
        NumberOfCustomers:
          type: integer
          example: 100
        FullName:
          type: string
          example: "John Doe"
        Password:
          type: string
          example: "your_secure_password"
      required:
        - Role
        - Email
        - PhoneNumber
        - CompanyName
        - CompanyAddress
        - NumberOfCustomers
        - FullName
        - Password
    AdminOutput:
      type: object
      properties:
        token:
          type: string
          example: "1|nAa6JlwA8MjstzIzGKRiiwseBJnGM1apuxynTUPo1edab483"
        user:
          type: object
          properties:
            Role:
              type: string
              example: "Admin"
            Email:
              type: string
              example: "ali.karami.ali313@gmail.com"
            PhoneNumber:
              type: string
              example: "09129211086"
            updated_at:
              type: string
              format: date-time
              example: "2023-10-24T11:03:34.000000Z"
            created_at:
              type: string
              format: date-time
              example: "2023-10-24T11:03:34.000000Z"
            id:
              type: integer
              format: int64
              example: 2
            roles:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 2
                  name:
                    type: string
                    example: "Admin"
                  guard_name:
                    type: string
                    example: "api"
                  created_at:
                    type: string
                    format: date-time
                    example: "2023-10-19T13:57:09.000000Z"
                  updated_at:
                    type: string
                    format: date-time
                    example: "2023-10-19T13:57:09.000000Z"
                  pivot:
                    type: object
                    properties:
                      model_type:
                        type: string
                        example: "App\\Models\\User"
                      model_id:
                        type: integer
                        format: int64
                        example: 2
                      role_id:
                        type: integer
                        format: int64
                        example: 2
        message:
          type: string
          example: "Welcome email sent successfully"
    CustomerInput:
      type: object
      properties:
        Role:
          type: string
          example: "Customer"
        FullName:
          type: string
          example: "John Doe"
        FatherName:
          type: string
          example: "John's Father"
        Email:
          type: string
          example: "customer@example.com"
        PhoneNumber:
          type: string
          example: "09121234567"
        Country:
          type: string
          example: "Country"
        City:
          type: string
          example: "City"
        Address:
          type: string
          example: "123 Main Street, City, Country"
        Gender:
          type: string
          example: "Male"
        NationalCode:
          type: string
          example: "1234567890"
        Job:
          type: string
          example: "Software Developer"
        Image:
          type: string
          example: "image_url.jpg"
        Education:
          type: string
          example: "Bachelor's Degree"
        CityEducation:
          type: string
          example: "City of Education"
        Password:
          type: string
          example: "your_secure_password"
      required:
        - Role
        - FullName
        - Email
        - PhoneNumber
        - Country
        - City
        - Address
        - Gender
        - NationalCode
        - Job
        - Image
        - Education
        - CityEducation
        - Password
    CustomerOutput:
      type: object
      properties:
        token:
          type: string
          example: "2|xydqBNrRLSIISvRaguxueFF0PwQCFmfAY7K5Iw2V54b03cd4"
        user:
          type: object
          properties:
            Role:
              type: string
              example: "Customer"
            FullName:
              type: string
              example: "John Doe"
            FatherName:
              type: string
              example: "John's Father"
            Email:
              type: string
              example: "customer@example.com"
            PhoneNumber:
              type: string
              example: "09121234567"
            Country:
              type: string
              example: "Country"
            City:
              type: string
              example: "City"
            Address:
              type: string
              example: "123 Main Street, City, Country"
            Gender:
              type: string
              example: "Male"
            NationalCode:
              type: string
              example: "1234567890"
            Job:
              type: string
              example: "Software Developer"
            Image:
              type: string
              example: "image_url.jpg"
            Education:
              type: string
              example: "Bachelor's Degree"
            CityEducation:
              type: string
              example: "City of Education"
            Password:
              type: string
              example: "your_secure_password"
        message:
          type: string
          example: "Welcome email sent successfully"
